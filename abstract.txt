For implementing statistical methods in software, we recently started trying out the Julia language. "Julia is a high-level, general-purpose dynamic programming language, most commonly used for numerical analysis and computational science" (Wikipedia) and as such well suited for statistical applications. 
I will introduce two successful Julia projects. The first project implements joint models for time-to-event and longitudinal outcomes (see e.g. Kerioui et al. 2022), and is available open source as JointSurvivalModels.jl. It uses Turing.jl for MCMC based Bayesian inference, based on a new distribution class for time-to-event data specified via hazard functions. The second project implements Bayesian safety signal detection as described by Brock et al. (2022), under construction and open source as SafetySignalDetection.jl, again using Turing.jl and with a suitable extension of the expectation-maximization algorithm for fitting Beta mixtures. 
I will discuss the reasons why these projects were successful, and describe how we could easily embed the Julia algorithms into an R based overall workflow. 
Finally, I will introduce openstatsware.org where a growing community of statistical software engineers comes together to build software packages and develop and share best practices for such.